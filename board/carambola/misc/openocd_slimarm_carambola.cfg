########################################










# NOTE: THE FILE IS DEPRECATED










########################################
# SlimARM Classic Carambola openocd configuration

#### This is the openocd configuration file for 
#### SlimARM Classic board (SlimARM Carambola)
#### The followng configuration will set
#### the system to clock 400MHz, initializing DDR, probing
#### NAND Part.No.
#### Note: 
#### 1. Modify the setting in "Set JTAG adapter" to use your
#### own JTAG debugger.
####
#### Author: jlywxy(jlywxy@outlook.com, github.com/jlywxy)

## Enable remote debug(especially for IAR inside VM commmunicating to openocd)
bindto 0.0.0.0
## Set JTAG interface adapter
###################################################

source [find interface/altera-usb-blaster.cfg]

###################################################


source [find ./openocd_slimarm_carambola_ddr2_16bit_k4t1g164_initialization.cfg]
source [find ./openocd_slimarm_bitutils.cfg]
global _DEBUG 0

if { [info exists CHIPNAME] } {
	set AT91_CHIPNAME $CHIPNAME
} else {
	set AT91_CHIPNAME at91sam9g25
}
source [find target/at91sam9.cfg]
$_TARGETNAME configure -work-area-phys 0x00300000 -work-area-size 0x00100000 -work-area-backup 1
arm7_9 dcc_downloads enable
arm7_9 fast_memory_access enable
reset_config srst_only

init


proc board_init { } {

    

    halt
    echo ""
    echo "----------------SlimARM Classic------------------"
	echo "SlimARM Code: Carambola (SoC: Atmel AT91SAM9G25)"

	## Check core halt-able
    if { [[target current] curstate] != "halted" } {
        echo "-> \[error\] core not halt-able. check if soldering/connection dependable or chip damaged.\n"
        exit
    }
    ## Check connection
    if { [read_memory 0xfffff400 8 1] == "0xff" } {
        echo "-> \[error\] board not connected. \n"
        exit
    }
    ## Detect cores
    echo "-> core: [target current] ([[target current] curstate])"
    echo "-> performing board initialization..."

    ##########################################################
    # Disable Watchdog
    mww 0xfffffd44 0x00008000

    ##########################################################
    ####### Setting up Clock
    set_reg_bit 0xfffffc28 16 0xff 0xc7
    set_reg_bit 0xfffffc28 8 0b111111 0x3f
    set_reg_bit 0xfffffc28 0 0xff 3
    #mww 0xfffffc30 [ expr { 2<<0 | 0<<4 | 3<<8 }]
    mww 0xfffffc30 0x00001302

    mww 0xffffdf20 [expr {1 << 1|0<<8|0<<9}]
    mww 0xffffe820 [expr {4 << 0 | 1 << 4}]

    mww 0xFFFFDF20 0x0102000A

    
    echo "-> \[info\] CKGR_MCFR@0xfffffc24: "
    set CKGR_MCFR [read_memory 0xfffffc24 32 1]
    set CLOCK_MAINF [get_bit $CKGR_MCFR 0 0xffff]
    set MAIN_CLOCK [ expr { $CLOCK_MAINF * 32 / 16 /1000 } ]
    echo "\n\t*Main Clock Calculated: $MAIN_CLOCK MHz\n"

    echo "-> \[info\] CKGR_PLLAR@0xfffffc28: "
    set CKGR_PLLAR [read_memory 0xfffffc28 32 1]
    set DIVA [read_memory 0xfffffc28 8 1]
    echo "\tDIVA: $DIVA"
    set PLLA_MULA [get_bit $CKGR_PLLAR 16 0xff]
    echo "\n\t*PLLA Calculated: [ expr { $MAIN_CLOCK / $DIVA * ( $PLLA_MULA + 1) } ] MHz\n"



    echo "-> \[info\] CCFG_EBICSA@0xffffdf20: "
    set CCFG_EBICSA [read_memory 0xffffdf20 32 1]
    echo "\tEBI_CS1A:[get_bit $CCFG_EBICSA 1 1]\t1: CS1 to DDR2"


    echo "-> \[info\] CKGR_MCKR@0xfffffc30: "
    set CKGR_MCKR [read_memory 0xfffffc30 32 1]
    echo "\tCSS:[get_bit $CKGR_MCKR 0 0b11]\t0:SLOW_CLK,1:MAIN_CLK,2:PLLA_CLK,3:UPLL_CLK"
    echo "\tPRES:[get_bit $CKGR_MCKR 4 0b11]\t0:CLOCK,1:CLOCK_DIV2,2:CLOCK_DIV4,..."
    echo "\tMDIV:[get_bit $CKGR_MCKR 8 0b11]\t0:MCK=Pre,1:MCK=Pre/2,2:MCK=Pre/4,3:MCK=Pre/3"

    echo "-> \[info\] DDRSDRC_MD@0xffffe820: "
    set DDRSDRC_MD [read_memory 0xffffe820 32 1]
    echo "\tMD:[get_bit $DDRSDRC_MD 0 0b111]\t0:SDR,1:LPSDR,3:LPDDR1,4:DDR2"
    echo "\tDBW:[get_bit $DDRSDRC_MD 4 1]\tBus Width 0:32bit,1:16bit"

    init_ddr2
    

	echo "-> \[info\] board initialization done."
    echo ""
    echo "-> use 'telnet localhost 4444' to connect to REPL over telnet."
    echo "-> use 'board_init' in telnet to re-initialize anytime."

    echo "------------------------------------------------"
    echo ""
}
board_init